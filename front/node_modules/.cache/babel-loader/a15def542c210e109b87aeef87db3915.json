{"ast":null,"code":"import axios from 'axios';\nimport Cookies from 'js-cookie';\n\nasync function request(method, data) {\n  let formData = new FormData();\n  formData.append(\"method\", method);\n  formData.append(\"data\", JSON.stringify(data));\n  return await axios.post(\"http://dream\", formData).then(res => {\n    if (res.data.success) {\n      return {\n        success: true,\n        data: res.data,\n        error: false\n      };\n    } else {\n      return {\n        success: false,\n        data: res.data,\n        error: false\n      };\n    }\n  }).catch(err => {\n    return {\n      success: false,\n      error: err\n    };\n  });\n}\n\nasync function requests(methodsAndData, generalData) {\n  // {\"method\": {}, \"data\": {}}\n  let formData = new FormData();\n  formData.append(\"multi\", true);\n  formData.append(\"MAD\", JSON.stringify(methodsAndData));\n  formData.append(\"data\", JSON.stringify(generalData));\n  return await axios.post(\"http://dream\", formData).then(res => {\n    if (res.data.success) {\n      console.log(res);\n    } else {\n      console.log(res);\n    }\n  }).catch(err => {\n    console.log(err);\n  });\n}\n\nasync function uploadFiles(method, data, files) {\n  let formData = new FormData();\n  formData.append(\"method\", method);\n  formData.append(\"data\", JSON.stringify(data));\n  files.map(file => formData.append(\"files[]\", file));\n  return await axios.post(\"http://dream\", formData, {\n    cache: false,\n    contentType: false,\n    processData: false\n  }).then(res => {\n    if (res.data.success) {\n      return {\n        success: true,\n        data: res.data.data\n      };\n    } else {\n      return {\n        success: false,\n        data: res.data.data\n      };\n    }\n  }).catch(err => {\n    return {\n      success: false,\n      error: true,\n      err\n    };\n  });\n}\n\nfunction getToken() {\n  return JSON.parse(Cookies.get(\"data\")).token;\n}\n\nexport { request, requests, uploadFiles, getToken }; //import {request, uploadFiles, getToken} from './requests';","map":{"version":3,"sources":["D:/Files/Projects/- WEB/TravelersDream/front/src/Components/requests.js"],"names":["axios","Cookies","request","method","data","formData","FormData","append","JSON","stringify","post","then","res","success","error","catch","err","requests","methodsAndData","generalData","console","log","uploadFiles","files","map","file","cache","contentType","processData","getToken","parse","get","token"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\nasync function request(method, data) {\r\n    let formData = new FormData();\r\n    formData.append(\"method\", method);\r\n    formData.append(\"data\", JSON.stringify(data));\r\n    return await axios.post(\"http://dream\", formData).then(res => {\r\n        if (res.data.success) {\r\n            return {success: true, data: res.data, error: false}\r\n        }\r\n        else {\r\n            return {success: false, data: res.data, error: false}\r\n        }\r\n    })\r\n    .catch(err => {\r\n        return {success: false, error: err}\r\n    });\r\n}\r\n\r\nasync function requests(methodsAndData, generalData) { // {\"method\": {}, \"data\": {}}\r\n    let formData = new FormData();\r\n    formData.append(\"multi\", true);\r\n    formData.append(\"MAD\", JSON.stringify(methodsAndData));\r\n    formData.append(\"data\",  JSON.stringify(generalData));\r\n    return await axios.post(\"http://dream\", formData).then(res => {\r\n        if (res.data.success) {\r\n            console.log(res);\r\n        }\r\n        else {\r\n            console.log(res);\r\n        }\r\n    })\r\n    .catch(err => {\r\n        console.log(err);\r\n    });\r\n}\r\n\r\nasync function uploadFiles(method, data, files) {\r\n    let formData = new FormData();\r\n    formData.append(\"method\", method);\r\n    formData.append(\"data\", JSON.stringify(data));\r\n    files.map(file => formData.append(\"files[]\", file));\r\n    return await axios.post(\"http://dream\", formData, {\r\n        cache: false,\r\n        contentType: false,\r\n        processData: false\r\n    }).then(res => {\r\n        if (res.data.success) {\r\n            return {success: true, data: res.data.data}\r\n        }\r\n        else {\r\n            return {success: false, data: res.data.data}\r\n        }\r\n    })\r\n    .catch(err => {\r\n        return {success: false, error: true, err}\r\n    });\r\n}\r\nfunction getToken() {\r\n    return JSON.parse(Cookies.get(\"data\")).token\r\n}\r\n\r\nexport {request, requests, uploadFiles, getToken};\r\n//import {request, uploadFiles, getToken} from './requests';"]},"metadata":{},"sourceType":"module"}