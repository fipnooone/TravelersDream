{"ast":null,"code":"import axios from 'axios';\nimport Cookies from 'js-cookie';\n\nasync function request(method, data) {\n  let formData = new FormData();\n  formData.append(\"method\", method);\n  formData.append(\"data\", JSON.stringify(data));\n  return await axios.post(\"http://dream\", formData).then(res => {\n    if (res.data.success) {\n      return {\n        success: true,\n        data: res.data.data\n      };\n    } else {\n      return {\n        success: false,\n        data: res.data.data\n      };\n    }\n  }).catch(err => {\n    return {\n      success: false,\n      error: true,\n      err\n    };\n  });\n}\n\nasync function uploadFiles(method, data, file) {\n  let formData = new FormData();\n  formData.append(\"method\", method);\n  formData.append(\"data\", JSON.stringify(data));\n  formData.append(\"file[]\", [file]); //files.map(file => formData.append(\"files[]\", file));\n\n  console.log(formData.getAll(\"file\"));\n  return await axios.post(\"http://dream\", formData, {\n    cache: false,\n    contentType: false,\n    processData: false\n  }).then(res => {\n    if (res.data.success) {\n      return {\n        success: true,\n        data: res.data.data\n      };\n    } else {\n      return {\n        success: false,\n        data: res.data.data\n      };\n    }\n  }).catch(err => {\n    return {\n      success: false,\n      error: true,\n      err\n    };\n  });\n}\n\nfunction getToken() {\n  return JSON.parse(Cookies.get(\"data\")).token;\n}\n\nexport { request, uploadFiles, getToken };","map":{"version":3,"sources":["D:/Files/Projects/- WEB/TravelersDream/front/src/Components/requests.js"],"names":["axios","Cookies","request","method","data","formData","FormData","append","JSON","stringify","post","then","res","success","catch","err","error","uploadFiles","file","console","log","getAll","cache","contentType","processData","getToken","parse","get","token"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,eAAeC,OAAf,CAAuBC,MAAvB,EAA+BC,IAA/B,EAAqC;AACjC,MAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0BJ,MAA1B;AACAE,EAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAxB;AACA,SAAO,MAAMJ,KAAK,CAACU,IAAN,CAAW,cAAX,EAA2BL,QAA3B,EAAqCM,IAArC,CAA0CC,GAAG,IAAI;AAC1D,QAAIA,GAAG,CAACR,IAAJ,CAASS,OAAb,EAAsB;AAClB,aAAO;AAACA,QAAAA,OAAO,EAAE,IAAV;AAAgBT,QAAAA,IAAI,EAAEQ,GAAG,CAACR,IAAJ,CAASA;AAA/B,OAAP;AACH,KAFD,MAGK;AACD,aAAO;AAACS,QAAAA,OAAO,EAAE,KAAV;AAAiBT,QAAAA,IAAI,EAAEQ,GAAG,CAACR,IAAJ,CAASA;AAAhC,OAAP;AACH;AACJ,GAPY,EAQZU,KARY,CAQNC,GAAG,IAAI;AACV,WAAO;AAACF,MAAAA,OAAO,EAAE,KAAV;AAAiBG,MAAAA,KAAK,EAAE,IAAxB;AAA8BD,MAAAA;AAA9B,KAAP;AACH,GAVY,CAAb;AAWH;;AACD,eAAeE,WAAf,CAA2Bd,MAA3B,EAAmCC,IAAnC,EAAyCc,IAAzC,EAA+C;AAC3C,MAAIb,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0BJ,MAA1B;AACAE,EAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAxB;AACAC,EAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0B,CAACW,IAAD,CAA1B,EAJ2C,CAK3C;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYf,QAAQ,CAACgB,MAAT,CAAgB,MAAhB,CAAZ;AACA,SAAO,MAAMrB,KAAK,CAACU,IAAN,CAAW,cAAX,EAA2BL,QAA3B,EAAqC;AAC9CiB,IAAAA,KAAK,EAAE,KADuC;AAE9CC,IAAAA,WAAW,EAAE,KAFiC;AAG9CC,IAAAA,WAAW,EAAE;AAHiC,GAArC,EAIVb,IAJU,CAILC,GAAG,IAAI;AACX,QAAIA,GAAG,CAACR,IAAJ,CAASS,OAAb,EAAsB;AAClB,aAAO;AAACA,QAAAA,OAAO,EAAE,IAAV;AAAgBT,QAAAA,IAAI,EAAEQ,GAAG,CAACR,IAAJ,CAASA;AAA/B,OAAP;AACH,KAFD,MAGK;AACD,aAAO;AAACS,QAAAA,OAAO,EAAE,KAAV;AAAiBT,QAAAA,IAAI,EAAEQ,GAAG,CAACR,IAAJ,CAASA;AAAhC,OAAP;AACH;AACJ,GAXY,EAYZU,KAZY,CAYNC,GAAG,IAAI;AACV,WAAO;AAACF,MAAAA,OAAO,EAAE,KAAV;AAAiBG,MAAAA,KAAK,EAAE,IAAxB;AAA8BD,MAAAA;AAA9B,KAAP;AACH,GAdY,CAAb;AAeH;;AACD,SAASU,QAAT,GAAoB;AAChB,SAAOjB,IAAI,CAACkB,KAAL,CAAWzB,OAAO,CAAC0B,GAAR,CAAY,MAAZ,CAAX,EAAgCC,KAAvC;AACH;;AAED,SAAQ1B,OAAR,EAAiBe,WAAjB,EAA8BQ,QAA9B","sourcesContent":["import axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\nasync function request(method, data) {\r\n    let formData = new FormData();\r\n    formData.append(\"method\", method);\r\n    formData.append(\"data\", JSON.stringify(data));\r\n    return await axios.post(\"http://dream\", formData).then(res => {\r\n        if (res.data.success) {\r\n            return {success: true, data: res.data.data}\r\n        }\r\n        else {\r\n            return {success: false, data: res.data.data}\r\n        }\r\n    })\r\n    .catch(err => {\r\n        return {success: false, error: true, err}\r\n    });\r\n}\r\nasync function uploadFiles(method, data, file) {\r\n    let formData = new FormData();\r\n    formData.append(\"method\", method);\r\n    formData.append(\"data\", JSON.stringify(data));\r\n    formData.append(\"file[]\", [file]);\r\n    //files.map(file => formData.append(\"files[]\", file));\r\n    console.log(formData.getAll(\"file\"));\r\n    return await axios.post(\"http://dream\", formData, {\r\n        cache: false,\r\n        contentType: false,\r\n        processData: false\r\n    }).then(res => {\r\n        if (res.data.success) {\r\n            return {success: true, data: res.data.data}\r\n        }\r\n        else {\r\n            return {success: false, data: res.data.data}\r\n        }\r\n    })\r\n    .catch(err => {\r\n        return {success: false, error: true, err}\r\n    });\r\n}\r\nfunction getToken() {\r\n    return JSON.parse(Cookies.get(\"data\")).token\r\n}\r\n\r\nexport {request, uploadFiles, getToken};"]},"metadata":{},"sourceType":"module"}