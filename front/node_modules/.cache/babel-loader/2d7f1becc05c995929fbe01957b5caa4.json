{"ast":null,"code":"var _jsxFileName = \"D:\\\\Files\\\\Projects\\\\- WEB\\\\TravelersDream\\\\front\\\\src\\\\Components\\\\Lk.js\";\nimport React, { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport { request, requests, uploadFiles, getToken } from './requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass LK extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOutsideClick = event => {\n      if (this.box && this.box.current !== null && !this.box.current.contains(event.target)) {\n        if (window.getComputedStyle(document.getElementById(\"UserHeaderMore\")).getPropertyValue(\"visibility\") === 'visible') document.getElementById(\"UserHeaderMore\").style.visibility = 'hidden';\n      }\n    };\n\n    this.state = {\n      me: {\n        username: '',\n        photo: 'http://dream/profilepictures/0.png'\n      },\n      blocks: {\n        categories: [],\n        types: [],\n        createNewPanel: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"LKMIB-CNew\",\n          className: \"create-new\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 33\n        }, this)\n      },\n      currCP: {\n        action,\n        photo\n      }\n    };\n    this.update();\n  }\n\n  mib() {\n    document.getElementById(\"LKMIB\").style.visibility = \"hidden\";\n    document.getElementById(\"LKMIB-CNew\").style.animation = \"hideToDown 0.3s\";\n    document.getElementById(\"LKMIB-CNew\").style.visibility = \"hidden\";\n    document.getElementById(\"LKMIB-CNew\").style.opacity = \"0\";\n  }\n\n  componentDidMount() {\n    document.addEventListener('click', this.handleOutsideClick);\n  }\n\n  showMore() {\n    if (window.getComputedStyle(document.getElementById(\"UserHeaderMore\")).getPropertyValue(\"visibility\") === 'hidden') document.getElementById(\"UserHeaderMore\").style.visibility = 'visible';else document.getElementById(\"UserHeaderMore\").style.visibility = 'hidden';\n  }\n\n  update() {\n    requests({\n      'getUserInfo': {\n        keys: ['name', 'photo']\n      },\n      'getTypes': {},\n      'getCategories': {}\n    }, {\n      'token': getToken()\n    }).then(res => {\n      if (res.success) {\n        let data = res.result;\n        if (data.getUserInfo.success) // getUserInfo\n          this.setState({\n            me: {\n              username: data.getUserInfo.data.name,\n              photo: data.getUserInfo.data.photo\n            }\n          });else this.logOut();\n\n        if (data.getTypes.success) {\n          // getTypes\n          let __types = [];\n          let __counter = 0;\n          data.getTypes.data.types.map(type => {\n            __types.push( /*#__PURE__*/_jsxDEV(\"option\", {\n              value: __counter,\n              children: [\" \", type, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 39\n            }, this));\n\n            __counter++;\n          });\n          this.setState({\n            blocks: {\n              types: __types\n            }\n          });\n        }\n\n        if (data.getCategories.success) {\n          // getCategories\n          let __categories = [];\n          let __counter = 1;\n\n          let __getName = cat => {\n            switch (cat) {\n              case 'clients':\n                return 'Клиенты';\n\n              case 'contracts':\n                return 'Договоры';\n\n              case 'payments':\n                return 'Платежи';\n\n              case 'users':\n                return 'Пользователи';\n\n              case 'usertypes':\n                return 'Типы пользователей';\n\n              default:\n                return '';\n            }\n          };\n\n          data.getCategories.data.categories.map(c => {\n            __categories.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              id: `cat${c}`,\n              className: `cat-${__counter}`,\n              onClick: () => {//\n              },\n              children: __getName(c)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this));\n\n            __counter++;\n          });\n          this.setState({\n            blocks: {\n              categories: __categories\n            }\n          });\n        }\n      }\n    });\n  }\n\n  showCreatePanel(action, type, params) {\n    this.setState({\n      currCP: {\n        action: 0\n      }\n    });\n\n    let __getInput = t => {\n      switch (t) {\n        case 'users':\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-name input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \" \\u0418\\u043C\\u044F \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 29\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"inputName\",\n                type: \"text\",\n                children: [\" \", params.name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 42\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-fio input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \" \\u0424\\u0418\\u041E \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 29\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"inputFIO\",\n                type: \"text\",\n                onChange: e => {\n                  let fio = e.target.value.split(\" \");\n                  document.getElementById(\"inputName\").value = (fio[0] ? fio[0] : \"\") + (fio[1] ? ` ${fio[1][0]}.` : \"\") + (fio[2] ? ` ${fio[2][0]}.` : \"\");\n                },\n                children: [\" \", params.fio, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 42\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-date input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \" \\u0414\\u0430\\u0442\\u0430 \\u0440\\u043E\\u0436\\u0434\\u0435\\u043D\\u0438\\u044F \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 29\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"inputBDate\",\n                type: \"date\",\n                children: [\" \", params.bdate, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 52\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-type input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \" \\u0422\\u0438\\u043F \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 29\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"selectType\",\n                value: params.type,\n                children: [\" \", that.state.blocks.types, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 42\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true);\n\n        case 'clients':\n          return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n\n        case 'contracts':\n          return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n\n        case 'payments':\n          return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n\n        case 'usertypes':\n          return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n\n        default:\n          return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n      }\n    };\n\n    let __imageInput = type === 'users' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-input-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"image-title\",\n        children: \"\\u0424\\u043E\\u0442\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"imageInput\",\n        className: \"image-input\",\n        type: \"image\",\n        onClick: () => document.getElementById(\"fileInput\").click()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"fileInput\",\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: e => {\n          this.setState({\n            currCP: {\n              photo: e.target.files[0]\n            }\n          });\n          document.getElementById(\"imageInput\").src = window.URL.createObjectURL(e.target.files[0]);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n\n    let __newCP = /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"LKMIB-CNew\",\n      className: \"create-new\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-input\",\n          children: __textInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this), __imageInput]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 23\n    }, this);\n\n    this.setState({\n      blocks: {\n        createNewPanel: __newCP\n      }\n    });\n  }\n\n  logOut() {\n    Cookies.remove('data', {\n      path: '',\n      domain: 'localhost'\n    });\n    this.props.props.history.push({\n      pathname: '/auth'\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"main-ul\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            id: \"Logo\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"Sources/images/logo.png\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 36\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            id: \"UserHeader\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"UserHeaderMain\",\n              className: \"user-header-main\",\n              ref: this.box,\n              onClick: () => this.showMore(),\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"user-name\",\n                children: [\" \", this.state.me.username, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"user-picture\",\n                src: this.state.me.photo,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"UserHeaderMore\",\n              className: \"user-header-more\",\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"button-profile\",\n                children: \" \\u041F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"button-logout\",\n                onClick: () => this.logOut(),\n                children: \" \\u0412\\u044B\\u0439\\u0442\\u0438 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"LK\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"categoriesList\",\n            className: \"gr-list\",\n            children: [\" \", this.state.blocks.categories, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-of\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"createButton\",\n              className: \"button-create\",\n              onClick: () => {//\n              },\n              children: \" \\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"LKMIB\",\n          className: \"mib\",\n          onClick: () => this.mib()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }, this), this.state.blocks.createNewPanel]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\n;\nexport default LK;","map":{"version":3,"sources":["D:/Files/Projects/- WEB/TravelersDream/front/src/Components/Lk.js"],"names":["React","Component","Cookies","request","requests","uploadFiles","getToken","LK","constructor","props","handleOutsideClick","event","box","current","contains","target","window","getComputedStyle","document","getElementById","getPropertyValue","style","visibility","state","me","username","photo","blocks","categories","types","createNewPanel","currCP","action","update","mib","animation","opacity","componentDidMount","addEventListener","showMore","keys","then","res","success","data","result","getUserInfo","setState","name","logOut","getTypes","__types","__counter","map","type","push","getCategories","__categories","__getName","cat","c","showCreatePanel","params","__getInput","t","e","fio","value","split","bdate","that","__imageInput","click","files","src","URL","createObjectURL","__newCP","__textInput","remove","path","domain","history","pathname","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport {request, requests, uploadFiles, getToken} from './requests';\r\n\r\nclass LK extends Component {\r\n    constructor (props) {\r\n        super (props);\r\n        this.state = {\r\n            me: { username: '', photo: 'http://dream/profilepictures/0.png' },\r\n            blocks: {\r\n                categories: [],\r\n                types: [],\r\n                createNewPanel: <div id='LKMIB-CNew' className='create-new' />\r\n            },\r\n            currCP: { action, photo }\r\n        };\r\n        this.update();\r\n    };\r\n\r\n    mib() {\r\n        document.getElementById(\"LKMIB\").style.visibility = \"hidden\";\r\n        document.getElementById(\"LKMIB-CNew\").style.animation = \"hideToDown 0.3s\";\r\n        document.getElementById(\"LKMIB-CNew\").style.visibility = \"hidden\";\r\n        document.getElementById(\"LKMIB-CNew\").style.opacity = \"0\";\r\n    };\r\n    componentDidMount() { document.addEventListener('click', this.handleOutsideClick); }\r\n    handleOutsideClick = (event) => {\r\n        if (this.box && this.box.current !== null && !this.box.current.contains(event.target)) {\r\n            if (window.getComputedStyle(document.getElementById(\"UserHeaderMore\")).getPropertyValue(\"visibility\") === 'visible')\r\n                document.getElementById(\"UserHeaderMore\").style.visibility = 'hidden';\r\n        }\r\n    }\r\n    showMore() {\r\n        if (window.getComputedStyle(document.getElementById(\"UserHeaderMore\")).getPropertyValue(\"visibility\") === 'hidden')\r\n            document.getElementById(\"UserHeaderMore\").style.visibility = 'visible';\r\n        else\r\n            document.getElementById(\"UserHeaderMore\").style.visibility = 'hidden';\r\n    };\r\n\r\n    update() {\r\n        requests({\r\n            'getUserInfo': {keys: ['name', 'photo']},\r\n            'getTypes': {},\r\n            'getCategories': {}\r\n        }, { 'token': getToken() }).then(res => {\r\n            if (res.success) {\r\n                let data = res.result;\r\n                if (data.getUserInfo.success) // getUserInfo\r\n                    this.setState({\r\n                        me: {\r\n                            username: data.getUserInfo.data.name,\r\n                            photo: data.getUserInfo.data.photo\r\n                        }\r\n                    });\r\n                else this.logOut();\r\n                \r\n                if (data.getTypes.success) { // getTypes\r\n                    let __types = [];\r\n                    let __counter = 0;\r\n                    data.getTypes.data.types.map(type => {\r\n                        __types.push( <option value={__counter}> {type} </option> );\r\n                        __counter ++;\r\n                    });\r\n                    this.setState({ blocks: {types:  __types} });\r\n                }\r\n\r\n                if (data.getCategories.success) { // getCategories\r\n                    let __categories = [];\r\n                    let __counter = 1;\r\n                    let __getName = (cat) => {\r\n                        switch (cat) {\r\n                            case 'clients':\r\n                                return 'Клиенты';\r\n                            case 'contracts':\r\n                                return 'Договоры';\r\n                            case 'payments':\r\n                                return 'Платежи';\r\n                            case 'users':\r\n                                return 'Пользователи';\r\n                            case 'usertypes':\r\n                                return 'Типы пользователей';\r\n                            default:\r\n                                return '';\r\n                        }\r\n                    };\r\n\r\n                    data.getCategories.data.categories.map(c => {\r\n                        __categories.push(\r\n                            <p id={`cat${c}`} className={`cat-${__counter}`} onClick={() => {\r\n                                //\r\n                            }}>{__getName(c)}</p>\r\n                        )\r\n                        __counter ++;\r\n                    });\r\n                    this.setState({ blocks: {categories: __categories} });\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    showCreatePanel(action, type, params) {\r\n        this.setState({currCP: {action: 0}})\r\n        let __getInput = (t) => {\r\n            switch (t) {\r\n                case 'users':\r\n                    return (<>\r\n                        <div className='input-name input-row'> \r\n                            <p> Имя </p> <input id='inputName' type='text'> {params.name} </input>\r\n                        </div>\r\n                        <div className=\"input-fio input-row\">\r\n                            <p> ФИО </p> <input id=\"inputFIO\" type=\"text\" onChange={(e) => {\r\n                                let fio = e.target.value.split(\" \");\r\n                                document.getElementById(\"inputName\").value = (fio[0] ? fio[0] : \"\") + \r\n                                    (fio[1] ?  ` ${fio[1][0]}.` : \"\") + \r\n                                    (fio[2] ? ` ${fio[2][0]}.` : \"\");\r\n                            }}> {params.fio} </input>\r\n                        </div>\r\n                        <div className=\"input-date input-row\">\r\n                            <p> Дата рождения </p> <input id=\"inputBDate\" type=\"date\"> {params.bdate} </input>\r\n                        </div>\r\n                        <div className=\"input-type input-row\">\r\n                            <p> Тип </p> <select id=\"selectType\" value={params.type}> {that.state.blocks.types} </select>\r\n                        </div>\r\n                    </>);\r\n                case 'clients': \r\n                    return (<></>);\r\n                case 'contracts':\r\n                    return (<></>);\r\n                case 'payments':\r\n                    return (<></>);\r\n                case 'usertypes':\r\n                    return (<></>);\r\n                default:\r\n                    return <></>\r\n            }\r\n        } \r\n        let __imageInput = type === 'users' ? \r\n        <div className=\"image-input-block\">\r\n            <p className=\"image-title\">Фото</p>\r\n            <input id=\"imageInput\" className=\"image-input\" type=\"image\" onClick={ () => document.getElementById(\"fileInput\").click() }/>\r\n            <input id=\"fileInput\" type=\"file\" accept=\"image/*\" onChange={(e) => {\r\n                this.setState({currCP: {photo: e.target.files[0]}});\r\n                document.getElementById(\"imageInput\").src = window.URL.createObjectURL(e.target.files[0]);\r\n            }} />\r\n        </div> : <></>\r\n\r\n        let __newCP = <div id='LKMIB-CNew' className='create-new'>\r\n            <div className='input-block'>\r\n                <div className='text-input'>{__textInput}</div>\r\n                {__imageInput}\r\n            </div>\r\n        </div>\r\n\r\n        this.setState({blocks: {createNewPanel: __newCP}});\r\n    }\r\n\r\n    logOut() {\r\n        Cookies.remove('data', {\r\n            path: '',\r\n            domain: 'localhost'\r\n        });\r\n        this.props.props.history.push({ pathname: '/auth' });\r\n    };\r\n    \r\n    render() {\r\n        return (\r\n        <>\r\n            <header>\r\n                <ul className='main-ul'>\r\n                    <li id='Logo'> <img src=\"Sources/images/logo.png\" alt='' /> </li>\r\n                    <li id='UserHeader'>\r\n                        <div id='UserHeaderMain' className='user-header-main' ref={this.box} onClick={() => this.showMore()}>\r\n                            <p className='user-name'> {this.state.me.username} </p>\r\n                            <img className='user-picture' src={this.state.me.photo} alt='' />\r\n                        </div>\r\n                        <div id='UserHeaderMore' className='user-header-more'>\r\n                            <a className='button-profile'> Профиль </a>\r\n                            <a className='button-logout' onClick={() => this.logOut()} > Выйти </a>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </header>\r\n            <div id='LK'>\r\n                <div className='control-panel'>\r\n                    <div id='categoriesList' className='gr-list'> {this.state.blocks.categories} </div>\r\n                    <div className='list-of'>\r\n                        <p id='createButton' className='button-create' onClick={() => {\r\n                            //\r\n                        }}> Создать </p>\r\n                    </div>\r\n                </div>\r\n                <div id='LKMIB' className='mib' onClick={ () => this.mib() } />\r\n                {this.state.blocks.createNewPanel}\r\n            </div>    \r\n        </>\r\n        );\r\n    }\r\n};\r\n\r\nexport default LK;"]},"metadata":{},"sourceType":"module"}