[{"D:\\Files\\Projects\\- WEB\\TravelersDream\\front\\src\\index.js":"1","D:\\Files\\Projects\\- WEB\\TravelersDream\\front\\src\\Components\\ProtectedRoute.js":"2","D:\\Files\\Projects\\- WEB\\TravelersDream\\front\\src\\Components\\Authorization.js":"3","D:\\Files\\Projects\\- WEB\\TravelersDream\\front\\src\\Components\\lk.js":"4"},{"size":1884,"mtime":1625590412173,"results":"5","hashOfConfig":"6"},{"size":971,"mtime":1625386495141,"results":"7","hashOfConfig":"6"},{"size":5037,"mtime":1625818025687,"results":"8","hashOfConfig":"6"},{"size":4430,"mtime":1625590054480,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"qaup47",{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},"D:\\Files\\Projects\\- WEB\\TravelersDream\\front\\src\\index.js",["22"],"import { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport ProtectedRoute from './Components/ProtectedRoute';\nimport Authorization from './Components/Authorization';\nimport LK from './Components/lk';\nimport './index.sass';\n//import reportWebVitals from './reportWebVitals';\n\nconst Auths = () => {\n  return (\n    <Router>\n      <Switch>\n        <Redirect exact from=\"/\" to=\"/auth\"/>\n        <ProtectedRoute exact path=\"/auth\" component={Authorization}/>\n        <ProtectedRoute exact path=\"/lk\" component={LK}/>\n        <Redirect from=\"/\" to=\"/auth\"/>\n      </Switch>\n    </Router>\n  );\n}\n\nReactDOM.render(\n  <>\n  <noscript>Видимо, ваш браузер не поддерживает JavaScript, либо он выключен. Включите его для корректной работы сайта.</noscript>\n  <Auths />\n  <footer>\n    <div className=\"footer-block\">\n      <p className=\"Org-Name text\">ООО \"Мечта путешествнника\"</p>\n      <img id=\"LogoFooter\" src=\"Sources/images/logo-ru.png\" alt=\"\"/>\n      <a className=\"Sign text\" href=\"http://fipnoo.one\" target=\"_blank\" rel=\"noopener noreferrer\">developed by fipnooone</a>\n    </div>\n  </footer>\n  </>, document.getElementsByTagName('body')[0]\n);\n/*\n<ul>\n      <li className=\"Org-Name Text\">ООО \"Мечта путешествнника\"</li>\n      <li id=\"LogoFooter\"><img src=\"Sources/images/logo-ru.png\" alt=\"\"/></li>\n      <li className=\"Sign Text\"><a href=\"http://fipnoo.one\" target=\"_blank\" rel=\"noopener noreferrer\">developed by fipnooone</a></li>\n    </ul>\n*/\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();","D:\\Files\\Projects\\- WEB\\TravelersDream\\front\\src\\Components\\ProtectedRoute.js",["23","24"],"import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst ProtectedRoute = ({component: Component, ...rest}) => {\r\n    const cookie = Cookies.get();\r\n    const logged = cookie.data ? JSON.parse(cookie.data).token ? true : false : false;\r\n    return(\r\n        <Route {...rest} render = {\r\n            (props) => {\r\n                switch (logged, props.location.pathname) {\r\n                    case (logged === false && \"/auth\"):\r\n                        return <Component props={props}/>;\r\n                    case (logged === true && \"/auth\"):\r\n                        return <Redirect to=\"/lk\"/>;\r\n                    case (logged === true && \"/lk\"):\r\n                        return <Component props={props}/>;\r\n                    default:\r\n                        return <Redirect to=\"/auth\"/>;\r\n                }\r\n            }\r\n        }/>\r\n    )\r\n};\r\n\r\nexport default ProtectedRoute;","D:\\Files\\Projects\\- WEB\\TravelersDream\\front\\src\\Components\\Authorization.js",["25","26"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\nclass Authorization extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            auth: false,\r\n            loginText: \"\",\r\n            currAction: true\r\n        };\r\n    };\r\n    changeText = (text) => { this.setState({ loginText: text }) };\r\n    setAuth = (b) => { this.setState({ auth: b }) };\r\n    handleSubmit = async e => {\r\n        e.preventDefault();\r\n        let data = {\r\n            login: document.getElementById(\"LoginInput\").value,\r\n            password: document.getElementById(\"PasswordInput\").value\r\n        }\r\n        if ((data.login !== \"\") && (data.password !== \"\") && (data.login.length <= 255) && (data.password.length  <= 255)) {\r\n            let formData = new FormData();\r\n            formData.append(\"method\", \"login\");\r\n            formData.append(\"data\", JSON.stringify({\r\n                \"login\": data.login,\r\n                \"password\": data.password\r\n            }));\r\n            axios.post(\"http://dream\", formData)\r\n            .then(res => {\r\n                if (res.data.success) {\r\n                    this.changeText(\"\");\r\n                    this.setAuth(true);\r\n                    Cookies.set(\"data\", JSON.stringify({\r\n                        token: res.data.token\r\n                    }),{\r\n                        expires: new Date(new Date().getTime() + 15778476000)\r\n                    });\r\n                    (this.props.history || this.props.props.history).push({\r\n                        pathname: '/lk',\r\n                        state: {\r\n                            auth: this.state.auth\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    this.changeText(res.data.message);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                this.changeText(\"Произошла ошибка при подключении к серверу\");\r\n            });\r\n        }\r\n    };\r\n    render() {\r\n        let authBlock;\r\n        if (this.state.currAction) {\r\n            authBlock =\r\n            <div className=\"login-data\">\r\n                <input id=\"LoginInput\" type=\"email\" placeholder=\"Логин\" onChange={this.handleAdd} maxLength=\"255\"></input>\r\n                <input id=\"PasswordInput\" type=\"password\" placeholder=\"Пароль\" onChange={this.handleAdd} maxLength=\"255\"></input>\r\n                <button id=\"Submit\" onClick={this.handleSubmit}>Войти</button>\r\n            </div>\r\n        } else {\r\n            authBlock =\r\n            <div className=\"login-data\">\r\n                <input id=\"Name\" type=\"text\" placeholder=\"ФИО\" maxLength=\"255\"></input>\r\n                <input id=\"Login\" type=\"email\" placeholder=\"Логин\" maxLength=\"255\"></input>\r\n                <input id=\"Password\" type=\"password\" placeholder=\"Пароль\" maxLength=\"255\"></input>\r\n                <button>Далее</button>\r\n            </div>\r\n        }\r\n        return (\r\n            <>\r\n                <header className=\"auth-header\">\r\n                    <ul className=\"main-ul\">\r\n                        <li id=\"Logo\"><img src=\"Sources/images/logo.png\" alt=\"\"/></li>\r\n                        <li id=\"Auth\">\r\n                            <a className=\"button button-login\" onClick={() => this.setState({ currAction: true }) }>Войти</a>\r\n                            <a className=\"button button-register\" onClick={() => this.setState({ currAction: false }) }>Регистрация</a>\r\n                            <div className=\"selection-shadow\"></div>\r\n                        </li>\r\n                    </ul>\r\n                </header>\r\n                <div id=\"Authorization\">\r\n                    <div className=\"Form\">\r\n                        <svg width=\"64\" height=\"78\" viewBox=\"0 0 64 78\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path d=\"M32 0H52C58.6274 0 64 5.37258 64 12V51.76C64 55.9458 61.8189 59.8291 58.2444 62.0073L38.2444 74.1948C34.4095 76.5317 29.5905 76.5317 25.7556 74.1948L5.75557 62.0073C2.18114 59.8291 0 55.9458 0 51.76V12C0 5.37258 5.37258 0 12 0H32Z\" fill=\"#0e1118\"></path>\r\n                            <path d=\"M31.9963 37.7037C26.9645 37.7037 22.6665 38.4971 22.6665 41.6704C22.6665 44.8449 26.9377 45.6662 31.9963 45.6662C37.0282 45.6662 41.3262 44.8741 41.3262 41.6996C41.3262 38.5251 37.0562 37.7037 31.9963 37.7037Z\" fill=\"#FAFAFA\"></path>\r\n                            <path opacity=\"0.4\" d=\"M31.9963 34.681C35.4239 34.681 38.1703 31.9335 38.1703 28.507C38.1703 25.0805 35.4239 22.333 31.9963 22.333C28.5698 22.333 25.8223 25.0805 25.8223 28.507C25.8223 31.9335 28.5698 34.681 31.9963 34.681Z\" fill=\"#FAFAFA\"></path>\r\n                        </svg>\r\n                        <p id=\"TextLogin\">{this.state.loginText}</p>\r\n                        {authBlock}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n}; \r\n\r\nexport default Authorization;","D:\\Files\\Projects\\- WEB\\TravelersDream\\front\\src\\Components\\lk.js",["27","28"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\nclass LK extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            type: \"\"\r\n        };\r\n        this.box = React.createRef();\r\n        this.getUserInfo();\r\n    };\r\n    componentDidMount() { document.addEventListener('click', this.handleOutsideClick); }\r\n    handleOutsideClick = (event) => {\r\n        if (this.box && this.box.current !== null && !this.box.current.contains(event.target)) {\r\n            if (window.getComputedStyle(document.getElementById(\"UserHeaderMore\")).getPropertyValue(\"visibility\") === 'visible')\r\n                document.getElementById(\"UserHeaderMore\").style.visibility = 'hidden';\r\n        }\r\n    }\r\n    showMore() {\r\n        if (window.getComputedStyle(document.getElementById(\"UserHeaderMore\")).getPropertyValue(\"visibility\") === 'hidden')\r\n            document.getElementById(\"UserHeaderMore\").style.visibility = 'visible';\r\n        else\r\n            document.getElementById(\"UserHeaderMore\").style.visibility = 'hidden';\r\n    }\r\n    logOut() {\r\n        Cookies.remove('data', { path: '', domain: 'localhost' });\r\n        this.props.props.history.push({\r\n            pathname: '/auth'\r\n        })\r\n    };\r\n    getUserInfo() {\r\n        let formData = new FormData();\r\n        formData.append(\"method\", \"getUserInfo\");\r\n        formData.append(\"data\", JSON.stringify({\r\n            \"token\": JSON.parse(Cookies.get(\"data\")).token,\r\n            \"keys\": [\"name\", \"type\"]\r\n        }));\r\n        axios.post(\"http://dream\", formData).then(res => {\r\n            if (res.data.success) {\r\n                this.setState({\r\n                    username: res.data.data.name,\r\n                    type: res.data.data.type,\r\n                });\r\n            }\r\n            else {\r\n                this.logOut();\r\n            }\r\n        })\r\n        .catch(err => {\r\n            this.logOut();\r\n        });\r\n    };\r\n    render() {\r\n        const randInt =  Math.floor(Math.random() * 10 + 2);\r\n        let randomBlocks = [];\r\n        for (let i=0; i < randInt; i++) {\r\n            randomBlocks.push(\r\n                <div className=\"not-enought\" />\r\n            );\r\n        }\r\n        return (\r\n        <>\r\n            <header>\r\n                <ul className=\"main-ul\">\r\n                    <li id=\"Logo\"><img src=\"Sources/images/logo.png\" alt=\"\"/></li>\r\n                    <li id=\"UserHeader\">\r\n                        <div className=\"user-header-main\" id=\"UserHeaderMain\" ref={this.box} onClick={() => this.showMore() }>\r\n                            <p className=\"user-name\">{this.state.username}</p>\r\n                            <img className=\"user-picture\" src=\"https://i.imgur.com/dqc2q0w.png\" alt=\"\" />\r\n                        </div>\r\n                        <div className=\"user-header-more\" id=\"UserHeaderMore\">\r\n                            <a className=\"button-profile\" >Профиль</a>\r\n                            <a className=\"button-logout\" onClick={() => this.logOut() }>Выйти</a>\r\n                        </div>\r\n                        <div className=\"selection-shadow\"></div>\r\n                    </li>\r\n                </ul>\r\n            </header>\r\n            <div id=\"LK\">\r\n                <div className=\"control-panel\">\r\n                    <div className=\"gr-list\">\r\n                        <p>Сотрудники</p>\r\n                        <p>Клиенты</p>\r\n                        <p>Агенты</p>\r\n                    </div>\r\n                    <div className=\"list-of\">\r\n                        <p className=\"button-create\"></p>\r\n                        {randomBlocks}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n        );\r\n    };\r\n}\r\n/*\r\n<li id=\"UserHeader\">\r\n                        <ul className=\"user-header-ul\">\r\n                            <li className=\"user-name\"><p>{this.state.username}</p></li>\r\n                            <li className=\"user-picture\"><img src=\"https://randus.org/photos/w/c793b9797c7d3810.jpg\" alt=\"\" /></li>\r\n                        </ul>\r\n                        <a className=\"button button-logout\" onClick={() => this.logOut() }>Выйти</a>\r\n                        <div className=\"selection-shadow\"></div>\r\n                    </li> */\r\n//onClick={this.setState({ currAction: false })}\r\nexport default LK;",{"ruleId":"29","severity":1,"message":"30","line":1,"column":35,"nodeType":"31","messageId":"32","endLine":1,"endColumn":40},{"ruleId":"29","severity":1,"message":"33","line":1,"column":17,"nodeType":"31","messageId":"32","endLine":1,"endColumn":26},{"ruleId":"34","severity":1,"message":"35","line":11,"column":31,"nodeType":"36","messageId":"37","endLine":11,"endColumn":32},{"ruleId":"38","severity":1,"message":"39","line":79,"column":29,"nodeType":"40","endLine":79,"endColumn":117},{"ruleId":"38","severity":1,"message":"39","line":80,"column":29,"nodeType":"40","endLine":80,"endColumn":121},{"ruleId":"38","severity":1,"message":"39","line":75,"column":29,"nodeType":"40","endLine":75,"endColumn":60},{"ruleId":"38","severity":1,"message":"39","line":76,"column":29,"nodeType":"40","endLine":76,"endColumn":89},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]